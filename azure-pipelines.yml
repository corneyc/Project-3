# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

name: Azure Pipelines
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: 'eeac49b4-1894-49b3-91df-04c9be1f4656'

  # Web app name
  webAppName: 'project3'

  # Agent VM image name
  vmImageName: $(packer-temp)

  # Environment name
  environmentName: 'project3'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: ubuntu-20.04
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    #- script: |
        #python -m venv antenv
        #source antenv/bin/activate
        #python -m pip install --upgrade pip
        #pip install setup
        #pip install -r requirements.txt
      #workingDirectory: $(System.DefaultWorkingDirectory)
      #displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: 'jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
        #replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload FakeRestAPI package'
      artifact: drop-fakerestapi

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployfakeRestAPI
    pool:
      vmImage: ubuntu-20.04
    environment: $(TEST)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : project3'
            inputs:
              azureSubscription: $(corneyc-projects-connection)
              appName: $(webAppName)
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip